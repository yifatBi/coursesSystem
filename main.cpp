#include <iostream>
#include "Course.h"

using namespace std;

int main()
{
	//default course
	Course course;
	Student* pStudent1;
	Student student1("yifat",12292);
	Student student2("yifatush",12292);
	cout<<"Default course : "<<endl;
	course.print();
	cout<<"find not exist student expected -1 ---> actual result "<<course.findStudent(23423)<<endl;
	cout<<"find invalid student expected -1 ---> actual result "<<course.findStudent(234233)<<endl;
	cout<<"find student exist in first cell expected 0 ---> actual result "<<course.findStudent(DEFAULT_ID_1)<<endl;
	course.print();
	cout<<"add invalid student id and print --->stay the same"<<endl;
	course.addStudent(456456);
	course.print();
	cout<<"add already exist student and print ---> stay the same"<<endl;
	course.addStudent(DEFAULT_ID_1);
	course.print();
	cout<<"add valid student and print ---> new student added to the course"<<endl;
	course.addStudent(12346);
	course.print();
	cout<<"remove student and print ---> student removed from the course"<<endl;
	course.removeStudent(12346);
	course.print();
	cout<<"remove student that not in the course and print ---> student list stay the course"<<endl;
	course.removeStudent(12346);
	course.print();
	cout<<"switch between students that not in the course and print ---> student list stay the course"<<endl;
	course.switchStudents(12346,12222);
	course.print();
	cout<<"switch between the same student in the course and print ---> student list stay the course"<<endl;
	course.switchStudents(DEFAULT_ID_2,DEFAULT_ID_2);
	course.print();
	cout<<"switch between one student in the course and the other not and print ---> student list stay the course"<<endl;
	course.switchStudents(DEFAULT_ID_1,12346);
	course.print();
	cout<<"switch between 2 students in the course and print ---> students order changed"<<endl;
	course.switchStudents(DEFAULT_ID_1,DEFAULT_ID_2);
	course.print();
	cout<<"switch again between 2 students in the course and print ---> students order return to prev order"<<endl;
	course.switchStudents(DEFAULT_ID_1,DEFAULT_ID_2);
	course.print();
	cout<<"get for not exist student expected null--->actual result ";
	if(course.getStudent(12346)==NULL)
		cout<<"NULL"<<endl;
	cout<<"get for exist student expected different from null--->actual result ";
	if(course.getStudent(DEFAULT_ID_1)!=NULL) {
		(*course.getStudent(DEFAULT_ID_1)).print();
		pStudent1 = (course.getStudent(DEFAULT_ID_1));
		(*pStudent1).addGrade(12);
		cout<<"init course with 2equal pointers--->course with 1 student"<<endl;
		Course course2(pStudent1, pStudent1);
		course2.print();
	}
	course.print();
	cout<<"Check is equal expected result false---->"<<boolalpha<<course.isEqual(DEFAULT_ID_1,DEFAULT_ID_2)<<endl;
	cout<<"Check is equal expected result true---->"<<boolalpha<<course.isEqual(DEFAULT_ID_2,DEFAULT_ID_1)<<endl;
	cout<<"Check is equal expected result true---->"<<boolalpha<<course.isEqual(DEFAULT_ID_2,DEFAULT_ID_2)<<endl;
	cout<<"create course is 2 equal student----> only 1 student in the course"<<endl;
	Course course4(NULL, NULL);
	Course course3(student1, student2);
	course3.print();
	cout<<"course init with null pointer expected as default course"<<endl;
	course4.print();
	course3.addStudent(11223);
	course3.addStudent(11224);
	course3.addStudent(11225);
	course3.addStudent(11226);
	cout<<"add students "<<endl;
	course3.print();
	course3.removeStudent(11224);
	course3.removeStudent(11227);
	course3.removeStudent(student1.getId());
	cout<<"after remove:"<<endl;
	course3.print();
	cout<<"find student 11226 enter student "<<boolalpha<<(course3.findStudent(11226)!=NOT_EXIST)<<endl;
	cout<<"get the 11226 student "<<endl;
	(*course3.getStudent(11226)).print();
//	Student student("yifatush","122");
//	Student pStudent1("yifatushyifatushyifatushyifatush","12222");
//	Student studentinValid("yifatushyifatushyifatushyifatush","hjkio");
//	Student studentValid("valid","11111");
//	studentValid.isEqual(studentValid);
//	pStudent1.print();
//	studentinValid.print();
//	studentinValid.addGrade(4);
//	student.addGrade(1);
//	student.addGrade(2);
//	student.addGrade(3);
//	student.addGrade(4);
//	student.removeGrade(3);
//	cout<<studentinValid.isEqual(student)<<endl;
//	cout<<student.getStudentMaxGrade()<<endl;
//	student.removeGrade(4);
//	cout<<"Student Max grade :"<<student.getStudentMaxGrade()<<endl;
//	cout<<"all studentd max grade :"<<student.getMaxGrade();
//	student.print();
//	cout<<"student avarage: "<<student.getAverage()<<endl;
//	student.addGrade(12);
//	student.print();
//	cout<<"avarage: "<<student.getAverage()<<endl;
//	student.addGrade(15);
//	student.addGrade(15);
//	student.addGrade(15);
//	student.addGrade(15);
//	student.addGrade(15);
//	cout<<"max grade: "<<Student::getMaxGrade()<<endl;
//	student.print();
//	cout<<"avarage: "<<student.getAverage()<<endl;
//	student.addGrade(15);
//	student.addGrade(15);
//	student.addGrade(15);
//	student.addGrade(15);
//	cout<<"is equal to himself with values:"<<student.isEqual(student)<<endl;
//	studentValid.print();
//	student.print();
//	student.addGrade(15);
//	student.addGrade(15);
//	student.addGrade(15);
//	Student::printGradeFrequency();
//	cout<<"have fails :";
//	std::cout << std::boolalpha << student.isFail() << std::endl;
//	student.removeGrade(15);
//	cout<<"remove grade 15 :";
//	Student::printGradeFrequency();
//	student.print();
//	cout<<"avarage: "<<student.getAverage()<<endl;
//	student.addGrade(0);
//	student.print();
//	student.removeGrade(13);
//	student.print();
//	student.removeGrade(12);
//	student.print();
//	student.removeGrade(12);
//	student.print();
//	cout<<"No values is fail false :";
//	std::cout << std::boolalpha << student.isFail() << std::endl;
//	studentValid.addGrade(80);
//	cout<<studentValid.getStudentMaxGrade()<<endl;
//	cout<<student.getStudentMaxGrade()<<endl;
//	cout<<student.getMaxGrade()<<endl;
//	cout<<"No failed false :";
//	std::cout << std::boolalpha << studentValid.isFail() << std::endl;
//	studentValid.addGrade(15);
//	cout<<"max grade: "<<Student::getMaxGrade()<<endl;
//	cout<<"isEqual false:"<<studentValid.isEqual(student)<<endl;
//	cout<<"isEqual true:"<<student.isEqual(studentValid)<<endl;
//	studentValid.print();
//	Student::printGradeFrequency();
//	cout<<"Max Grade:"<<Student::getMaxGrade()<<endl;
//	student.addGrade(15);
//	student.print();
//	Course course2(student,studentValid);
//	course2.addStudent(44444);
//	course2.addStudent(44444);
//	course2.addStudent(44442);
//	course2.print();
//	course2.switchStudents(student.getId(),44442);
//	course2.print();
//	course2.removeStudent(44442);
//	course2.print();
//	cout<<"isEqual true:"<<student.isEqual(studentValid)<<endl;
//	cout<<"isEqual true:"<<course2.isEqual(student.getId(),studentValid.getId())<<endl;
//	cout<<"isEqual false:"<<studentValid.isEqual(student)<<endl;
//	cout<<"isEqual false:"<<course2.isEqual(studentValid.getId(),student.getId())<<endl;


	return 0;
}